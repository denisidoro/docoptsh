#!/usr/bin/env bash
set -euo pipefail

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null && pwd)"

source "${DIR}/src/constants.sh"
source "${DIR}/src/samples.sh"
source "${DIR}/src/string.sh"
source "${DIR}/src/input.sh"
source "${DIR}/src/usage.sh"
source "${DIR}/src/options.sh"
source "${DIR}/src/output.sh"
source "${DIR}/src/debug.sh"

argv="$0"
argc="$#"

i=1
while [ $i -le $argc ]; do
	case ${!i} in
		-h*) j=$((i+1)); doc="${!j}";;
    -v*) j=$((i+1)); version="${!j}";;
    :) shift "$i"; break;;
	esac
	i=$((i+1))
done

usage="$(echo "$doc" | usg::from_doc | usg::remove_first_word | usg::expand_optionals)"
full_opts="$(echo "$doc" | opt::from_doc)"
opts="$(echo "$full_opts" | opt::remove_description)"

input="$(in::escape "$@" | tr '=' ' ' | in::expand_dashes)"

input_plus_options="$(echo "$input" | in::extract_dashes "$opts")"
input_without_dashes="$(echo "$input_plus_options" | head -n1 | xargs)"
input_options="$(echo "$input_plus_options" | tail -n +2)"

case "$input_options" in 
  *--help*) echo -e "$doc"; exit 0;;
  *--version*) echo -e "${version:-version unknown}"; exit 0;;
esac

match="$(usg::match "$usage" "$input_without_dashes")"

code0="$(opt::defaults "$full_opts")"
code1="$input_options"
code2="$(usg::vars "$usage")"
code3="$(in::vars "$input_without_dashes" "$match")"

echo -e "$code0\n\n$input_options\n\n$code1\n\n$code2\n\n$code3" \
  | str::remove_blank_lines \
  | out::maximize_options "$opts" \
  | out::add_equal_sign_plus_hacks \
  | out::remove_strange_chars

